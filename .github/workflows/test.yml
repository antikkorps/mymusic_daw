name: Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: read

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev libudev-dev libxcb-shape0-dev libxcb-xfixes0-dev
    - name: Install stable toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy, rustfmt
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Run fmt
      run: cargo fmt --all -- --check
    - name: Run clippy
      run: cargo clippy --workspace --all-targets --all-features --verbose -- -D warnings
    - name: Run tests
      run: cargo test --workspace --verbose

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev libudev-dev libxcb-shape0-dev libxcb-xfixes0-dev
    - name: Install stable toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy, rustfmt
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ matrix.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Build
      run: cargo build --workspace --verbose